server:
  port: 10000
spring:
  application:
    name: complex #应用名字
  jackson:
    date-format: yyyy‐MM‐dd HH:mm:ss
    time-zone: GMT+8
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://120.27.63.0:3306/monolith?serverTimezone=Asia/Shanghai&characterEncoding=UTF-8&rewriteBatchedStatements=true
    username: monolith
    password: y3whAM3CtdM2W88A
    druid:
      initial-size: 2
      max-active: 5
      web-stat-filter:
        enabled: true
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: false
        allow:
        login-username: root
        login-password: root
      filter:
        stat:
          enabled: true
          merge-sql: true
          slow-sql-millis: 1000
          log-slow-sql: true
        wall:
          enabled: true
        slf4j:
          enabled: true
  redis:
    database: 0
    host: 120.27.63.0
    password: bd9d78
    port: 6379
  freemarker:
    suffix: html
  # 文件上传
  servlet:
    multipart:
      # 单个文件大小
      max-file-size: 1000MB
      # 设置总上传的文件大小
      max-request-size: 2000MB
# spring-boot-starter-quartz整合过，仅仅配置jdbc就能持久化到数据库
  quartz:
    # 参见 org.springframework.boot.autoconfigure.quartz.QuartzProperties
    job-store-type: jdbc
    wait-for-jobs-to-complete-on-shutdown: true
    scheduler-name: complex
    properties:
      org.quartz.threadPool.threadCount: 5
      org.quartz.threadPool.threadPriority: 5
      org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread: true
      org.quartz.jobStore.misfireThreshold: 5000
      org.quartz.jobStore.class: org.quartz.impl.jdbcjobstore.JobStoreTX
      org.quartz.jobStore.driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
      # 在调度流程的第一步，也就是拉取待即将触发的triggers时，是上锁的状态，即不会同时存在多个线程拉取到相同的trigger的情况，也就避免的重复调度的危险。参考：https://segmentfault.com/a/1190000015492260
      org.quartz.jobStore.acquireTriggersWithinLock: true

